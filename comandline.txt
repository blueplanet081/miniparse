言葉の定義

コマンドラインの構成

command -a -b -c optarg -deL500 --version --output=optarg2 commandarg1 commandarg2


command コマンド名（プログラム名）
-a -b -d -e １文字オプション（'a'、'b'、'd'、'e' オプション文字）

-c -L 引数付き１文字オプション
optarg　-c のオプション引数
500     -L のオプション引数

--version ロング名オプション（'version' オプション文字列）
--output  引数付きロング名オプション（'output' オプション文字列）
optarg2   --output のオプション引数

commandarg1  コマンド引数
commandarg2  コマンド引数



オプションのルール
・すべてのオプションは省略可
・オプションの指定順位は任意
　→ '-a -d --version' でも、'-d --version -a' でも、'--version -d -a' でも同じ

１文字オプションのルール
・オプション文字は１文字。
・１文字オプションは、オプション文字の前に '-'（ハイフンひとつ）を付けて指定する。
・複数の１文字オプションは、個別に入力しても良いし、- の後に続けて指定しても良い。
　→ -a -b -d -e と、-abde、-a -bde、-ab -de などすべて同じ
・ただし、引数付き１文字オプションは、続けて指定する場合は一連の最後に指定する
  → -c、-L が引数付き１文字オプションの場合、 -abc optarg、-deL500 などのように最後に指定する。
・１文字オプションのオプション引数は、オプション文字に続けて、またはオプション文字からスペースを空けた後に指定する。
　→ -c optarg、-coptarg、-L 500、-L500など
・引数付き１文字オプションが指定されたときは、後続のオプション引数は省略不可

ロング名オプションのルール
・ロング名オプションは、オプション文字列の前に '--'（ハイフン２つ）を付けて指定する。
・ロング名オプションは、個別に指定する。
・ロング名オプションのオプション文字列は、一意に判別できる限り省略して指定できる。
　→ --version、--verboseの２つのオプションがある時、'version'は、'versio'、'versi'、'vers'と省略できる。
・オプション引数が省略可能なロング名オプションの場合、オプション引数はオプション文字列の後に'='を付けて（スペースを空けずに）指定する。'='以降が無い時は、省略となる。
・オプション引数が必須なロング名オプションの場合、上記と同じように指定もできるし、引数付き１文字オプションと同様に、オプション文字列からスペースを空けた後に指定することもできる。

コマンド引数のルール
・頭に'-'（ハイフン）が付かない文字、または文字列で、前記のオプション引数に該当しない単独文字、または文字列は、コマンド引数として認識される。

例外ルール
・'--'（ハイフン２つ）のみの文字列が存在した場合、その次の単独文字、または文字列は先頭に'-'（ハイフン）が付いていても強制的にオプション引数、またはコマンド引数と判断される。
　→ -ab --version の場合、-a -b --version はすべて１文字、またはロング名オプション
　→ -ab -- --version の場合、--version はコマンド引数、またはオプション引数（-b が引数付きオプションの場合）

例外ルール２
・'-'（ハイフンひとつ）のみの文字が単独で存在した場合、現在はそのままコマンド引数、またはオプション引数と判断する。（後に仕様変更の可能性がある）

ワイルドカード展開ルール
・コマンドラインの文字列中に「ワイルドカード」と判断される文字または文字列が含まれている場合、コマンドラインの解析に先立ってワイルドカードが展開される。
・オプション文字や文字列、オプション引数に該当文字、または文字列を含めてしまった場合、予想外の解析結果になる場合もあるので注意。
・また、コマンド引数の展開後、頭に'-'（ハイフン）が付いたファイル名などが展開された場合、オプションの指定と区別が付きにくくなる場合があるので注意。
・ワイルドカードの展開が失敗した場合（展開後のファイル名が存在しなかった場合など）のふるまいは、処理環境（動作OSやシェルの種類）に依存する。→ 要確認。主に zshの場合

ワイルドカード展開の抑制ルール
・ワイルドカード展開をしたくない場合は、各文字列毎に、以下の手段で抑制できる。
　・各文字列の頭に'\'バックスラッシュを付ける。コマンドライン解析時は、バックスラッシュは削除される。
　　→ 「\*.py」 はワイルドカード展開されず、「*.py」として解釈される。
　・各文字列をシングルクォートで囲む。コマンドライン解析時は、シングルクォートは削除される。
　・ただし、Windows環境では頭にスペースを一つ付けてシングルクォートで囲む。コマンドライン解析時は、シングルクォートとスペースは削除される。
　　→ 「'*.py'」、「' *.py'」（Windowsの場合）はワイルドカード展開されず、「*.py」として解釈される。
